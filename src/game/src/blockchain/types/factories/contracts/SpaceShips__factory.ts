/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type { PromiseOrValue } from "../../common";
import type {
  SpaceShips,
  SpaceShipsInterface,
} from "../../contracts/SpaceShips";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAllOnSale",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "uri",
            type: "string",
          },
          {
            internalType: "bool",
            name: "isOnSale",
            type: "bool",
          },
        ],
        internalType: "struct SpaceShips.TokenMeta[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getTokenCreatorById",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTokensCreatedByMe",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTokensOwnedByMe",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "string",
        name: "_tokenURI",
        type: "string",
      },
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "_isOnSale",
        type: "bool",
      },
    ],
    name: "mintCollectable",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "purchaseToken",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_newBaseURI",
        type: "string",
      },
    ],
    name: "setBaseURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
    ],
    name: "setTokenPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "_isOnSale",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
    ],
    name: "setTokenSale",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "tokenMeta",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "uri",
            type: "string",
          },
          {
            internalType: "bool",
            name: "isOnSale",
            type: "bool",
          },
        ],
        internalType: "struct SpaceShips.TokenMeta",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_uri",
        type: "string",
      },
    ],
    name: "updateTokenUri",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040518060400160405280600f81526020016e57617220416c70686120536869707360881b815250604051806040016040528060048152602001630534849560e41b81525081600090816200006891906200019a565b5060016200007782826200019a565b505050620000946200008e6200009f60201b60201c565b620000a3565b600160075562000266565b3390565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200012057607f821691505b6020821081036200014157634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200019557600081815260208120601f850160051c81016020861015620001705750805b601f850160051c820191505b8181101562000191578281556001016200017c565b5050505b505050565b81516001600160401b03811115620001b657620001b6620000f5565b620001ce81620001c784546200010b565b8462000147565b602080601f831160018114620002065760008415620001ed5750858301515b600019600386901b1c1916600185901b17855562000191565b600085815260208120601f198616915b82811015620002375788860151825594840194600190910190840162000216565b5085821015620002565787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61270780620002766000396000f3fe6080604052600436106101b75760003560e01c8063715018a6116100ec578063c2db2c421161008a578063d4ddce8a11610064578063d4ddce8a146104f2578063e985e9c514610512578063eb685c471461055b578063f2fde38b1461057b57600080fd5b8063c2db2c421461049f578063c87b56dd146104b2578063d31af484146104d257600080fd5b806390894559116100c6578063908945591461042857806395d89b411461044a578063a22cb4651461045f578063b88d4fde1461047f57600080fd5b8063715018a6146103bf578063867d3397146103d45780638da5cb5b1461040a57600080fd5b806339b44436116101595780635ba37742116101335780635ba377421461034a5780636352211e1461035f5780636387ede61461037f57806370a082311461039f57600080fd5b806339b44436146102dc57806342842e0e1461030a57806355f804b31461032a57600080fd5b8063095ea7b311610195578063095ea7b31461024b5780630a989d9c1461026d5780630ae7a3101461028f57806323b872dd146102bc57600080fd5b806301ffc9a7146101bc57806306fdde03146101f1578063081812fc14610213575b600080fd5b3480156101c857600080fd5b506101dc6101d7366004611f50565b61059b565b60405190151581526020015b60405180910390f35b3480156101fd57600080fd5b506102066105ed565b6040516101e89190611fbd565b34801561021f57600080fd5b5061023361022e366004611fd0565b61067f565b6040516001600160a01b0390911681526020016101e8565b34801561025757600080fd5b5061026b610266366004612005565b6106a6565b005b34801561027957600080fd5b506102826107de565b6040516101e8919061202f565b34801561029b57600080fd5b506102af6102aa366004611fd0565b6108c3565b6040516101e891906120ce565b3480156102c857600080fd5b5061026b6102d73660046120e1565b610a85565b3480156102e857600080fd5b506102fc6102f73660046121d9565b610afd565b6040519081526020016101e8565b34801561031657600080fd5b5061026b6103253660046120e1565b610b96565b34801561033657600080fd5b5061026b610345366004612268565b610bb1565b34801561035657600080fd5b50610282610bc9565b34801561036b57600080fd5b5061023361037a366004611fd0565b610d00565b34801561038b57600080fd5b5061026b61039a36600461229d565b610d65565b3480156103ab57600080fd5b506102fc6103ba3660046122c2565b610e40565b3480156103cb57600080fd5b5061026b610eda565b3480156103e057600080fd5b506102336103ef366004611fd0565b6000908152600a60205260409020546001600160a01b031690565b34801561041657600080fd5b506006546001600160a01b0316610233565b34801561043457600080fd5b5061043d610eee565b6040516101e891906122dd565b34801561045657600080fd5b50610206611162565b34801561046b57600080fd5b5061026b61047a36600461233f565b611171565b34801561048b57600080fd5b5061026b61049a366004612372565b61117c565b61026b6104ad366004611fd0565b6111fb565b3480156104be57600080fd5b506102066104cd366004611fd0565b61131d565b3480156104de57600080fd5b5061026b6104ed3660046123ee565b611384565b3480156104fe57600080fd5b506102fc61050d366004611fd0565b6113dd565b34801561051e57600080fd5b506101dc61052d366004612435565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b34801561056757600080fd5b5061026b61057636600461245f565b61147d565b34801561058757600080fd5b5061026b6105963660046122c2565b611539565b60006001600160e01b031982166380ac58cd60e01b14806105cc57506001600160e01b03198216635b5e139f60e01b145b806105e757506301ffc9a760e01b6001600160e01b03198316145b92915050565b6060600080546105fc90612481565b80601f016020809104026020016040519081016040528092919081815260200182805461062890612481565b80156106755780601f1061064a57610100808354040283529160200191610675565b820191906000526020600020905b81548152906001019060200180831161065857829003601f168201915b5050505050905090565b600061068a826115c9565b506000908152600460205260409020546001600160a01b031690565b60006106b182610d00565b9050806001600160a01b0316836001600160a01b0316036107235760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b038216148061075d57506001600160a01b038116600090815260056020908152604080832033845290915290205460ff165b6107cf5760405162461bcd60e51b815260206004820152603e60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206e6f7220617070726f76656420666f7220616c6c0000606482015260840161071a565b6107d9838361162d565b505050565b606060006107eb60085490565b905060006107f833610e40565b905060008167ffffffffffffffff8111156108155761081561211d565b60405190808252806020026020018201604052801561083e578160200160208202803683370190505b5090506000805b848110156108b957600061085a8260016124d1565b90503361086682610d00565b6001600160a01b03161461087a57506108a7565b8084848151811061088d5761088d6124e4565b60209081029190910101526108a36001846124d1565b9250505b806108b1816124fa565b915050610845565b5090949350505050565b6108f76040518060a00160405280600081526020016000815260200160608152602001606081526020016000151581525090565b6000828152600260205260409020546001600160a01b031661091857600080fd5b600960008381526020019081526020016000206040518060a0016040529081600082015481526020016001820154815260200160028201805461095a90612481565b80601f016020809104026020016040519081016040528092919081815260200182805461098690612481565b80156109d35780601f106109a8576101008083540402835291602001916109d3565b820191906000526020600020905b8154815290600101906020018083116109b657829003601f168201915b505050505081526020016003820180546109ec90612481565b80601f0160208091040260200160405190810160405280929190818152602001828054610a1890612481565b8015610a655780601f10610a3a57610100808354040283529160200191610a65565b820191906000526020600020905b815481529060010190602001808311610a4857829003601f168201915b50505091835250506004919091015460ff16151560209091015292915050565b610a8f338261169b565b610af25760405162461bcd60e51b815260206004820152602e60248201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560448201526d1c881b9bdc88185c1c1c9bdd995960921b606482015260840161071a565b6107d983838361171a565b6000610b076118ce565b60008311610b1457600080fd5b610b22600880546001019055565b6000610b2d60085490565b9050610b398782611928565b6000818152600a602090815260409182902080546001600160a01b03191633179055815160a081018352838152908101869052908101869052606081018790528315156080820152610b8b8282611a6a565b509695505050505050565b6107d98383836040518060200160405280600081525061117c565b610bb96118ce565b600b610bc58282612561565b5050565b60606000610bd660085490565b90506000805b82811015610c39576000610bf18260016124d1565b6000818152600a60205260409020549091506001600160a01b03163314610c185750610c27565b610c236001846124d1565b9250505b80610c31816124fa565b915050610bdc565b5060008167ffffffffffffffff811115610c5557610c5561211d565b604051908082528060200260200182016040528015610c7e578160200160208202803683370190505b5090506000805b848110156108b9576000610c9a8260016124d1565b6000818152600a60205260409020549091506001600160a01b03163314610cc15750610cee565b80848481518110610cd457610cd46124e4565b6020908102919091010152610cea6001846124d1565b9250505b80610cf8816124fa565b915050610c85565b6000818152600260205260408120546001600160a01b0316806105e75760405162461bcd60e51b815260206004820152601860248201527f4552433732313a20696e76616c696420746f6b656e2049440000000000000000604482015260640161071a565b6000838152600260205260409020546001600160a01b0316610def5760405162461bcd60e51b815260206004820152602d60248201527f4552433732314d657461646174613a2053616c6520736574206f66206e6f6e6560448201527f78697374656e7420746f6b656e00000000000000000000000000000000000000606482015260840161071a565b60008111610dfc57600080fd5b33610e0684610d00565b6001600160a01b031614610e1957600080fd5b6000838152600960205260409020600401805460ff19168315151790556107d9838261147d565b60006001600160a01b038216610ebe5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f74206120766160448201527f6c6964206f776e65720000000000000000000000000000000000000000000000606482015260840161071a565b506001600160a01b031660009081526003602052604090205490565b610ee26118ce565b610eec6000611b12565b565b60606000610efb60085490565b67ffffffffffffffff811115610f1357610f1361211d565b604051908082528060200260200182016040528015610f7857816020015b610f656040518060a00160405280600081526020016000815260200160608152602001606081526020016000151581525090565b815260200190600190039081610f315790505b509050600060015b600854610f8e9060016124d1565b81101561115a5760008181526009602052604090206004015460ff16151560010361114857600960008281526020019081526020016000206040518060a00160405290816000820154815260200160018201548152602001600282018054610ff590612481565b80601f016020809104026020016040519081016040528092919081815260200182805461102190612481565b801561106e5780601f106110435761010080835404028352916020019161106e565b820191906000526020600020905b81548152906001019060200180831161105157829003601f168201915b5050505050815260200160038201805461108790612481565b80601f01602080910402602001604051908101604052809291908181526020018280546110b390612481565b80156111005780601f106110d557610100808354040283529160200191611100565b820191906000526020600020905b8154815290600101906020018083116110e357829003601f168201915b50505091835250506004919091015460ff161515602090910152835184908490811061112e5761112e6124e4565b60200260200101819052508180611144906124fa565b9250505b80611152816124fa565b915050610f80565b509092915050565b6060600180546105fc90612481565b610bc5338383611b64565b611186338361169b565b6111e95760405162461bcd60e51b815260206004820152602e60248201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560448201526d1c881b9bdc88185c1c1c9bdd995960921b606482015260840161071a565b6111f584848484611c32565b50505050565b60026007540361124d5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161071a565b6002600755331580159061127b575061126581610d00565b6001600160a01b0316336001600160a01b031614155b61128457600080fd5b6000818152600960205260409020600101543410156112a257600080fd5b60006112ad82610d00565b6040519091506001600160a01b038216903480156108fc02916000818181858888f193505050501580156112e5573d6000803e3d6000fd5b506112f1816001611171565b6112fc81338461171a565b506000908152600960205260409020600401805460ff191690556001600755565b6060611328826115c9565b6000611332611cbb565b90506000815111611352576040518060200160405280600081525061137d565b8061135c84611cca565b60405160200161136d929190612621565b6040516020818303038152906040525b9392505050565b6000828152600260205260409020546001600160a01b03166113a557600080fd5b336113af83610d00565b6001600160a01b0316146113c257600080fd5b60008281526009602052604090206003016107d98282612561565b6000818152600260205260408120546001600160a01b03166114675760405162461bcd60e51b815260206004820152603160248201527f4552433732314d657461646174613a20507269636520717565727920666f722060448201527f6e6f6e6578697374656e7420746f6b656e000000000000000000000000000000606482015260840161071a565b5060009081526009602052604090206001015490565b6000828152600260205260409020546001600160a01b03166115075760405162461bcd60e51b815260206004820152602e60248201527f4552433732314d657461646174613a20507269636520736574206f66206e6f6e60448201527f6578697374656e7420746f6b656e000000000000000000000000000000000000606482015260840161071a565b3361151183610d00565b6001600160a01b03161461152457600080fd5b60009182526009602052604090912060010155565b6115416118ce565b6001600160a01b0381166115bd5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f6464726573730000000000000000000000000000000000000000000000000000606482015260840161071a565b6115c681611b12565b50565b6000818152600260205260409020546001600160a01b03166115c65760405162461bcd60e51b815260206004820152601860248201527f4552433732313a20696e76616c696420746f6b656e2049440000000000000000604482015260640161071a565b600081815260046020526040902080546001600160a01b0319166001600160a01b038416908117909155819061166282610d00565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000806116a783610d00565b9050806001600160a01b0316846001600160a01b031614806116ee57506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b806117125750836001600160a01b03166117078461067f565b6001600160a01b0316145b949350505050565b826001600160a01b031661172d82610d00565b6001600160a01b0316146117a95760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201527f6f776e6572000000000000000000000000000000000000000000000000000000606482015260840161071a565b6001600160a01b03821661180b5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b606482015260840161071a565b61181660008261162d565b6001600160a01b038316600090815260036020526040812080546001929061183f908490612650565b90915550506001600160a01b038216600090815260036020526040812080546001929061186d9084906124d1565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6006546001600160a01b03163314610eec5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161071a565b6001600160a01b03821661197e5760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604482015260640161071a565b6000818152600260205260409020546001600160a01b0316156119e35760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015260640161071a565b6001600160a01b0382166000908152600360205260408120805460019290611a0c9084906124d1565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6000828152600260205260409020546001600160a01b0316611a8b57600080fd5b33611a9583610d00565b6001600160a01b031614611aa857600080fd5b60008281526009602090815260409182902083518155908301516001820155908201518291906002820190611add9082612561565b5060608201516003820190611af29082612561565b50608091909101516004909101805460ff19169115159190911790555050565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b816001600160a01b0316836001600160a01b031603611bc55760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604482015260640161071a565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b611c3d84848461171a565b611c4984848484611de3565b6111f55760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527f63656976657220696d706c656d656e7465720000000000000000000000000000606482015260840161071a565b6060600b80546105fc90612481565b606081600003611cf15750506040805180820190915260018152600360fc1b602082015290565b8160005b8115611d1b5780611d05816124fa565b9150611d149050600a83612679565b9150611cf5565b60008167ffffffffffffffff811115611d3657611d3661211d565b6040519080825280601f01601f191660200182016040528015611d60576020820181803683370190505b5090505b841561171257611d75600183612650565b9150611d82600a8661268d565b611d8d9060306124d1565b60f81b818381518110611da257611da26124e4565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350611ddc600a86612679565b9450611d64565b60006001600160a01b0384163b15611f2f57604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290611e279033908990889088906004016126a1565b6020604051808303816000875af1925050508015611e62575060408051601f3d908101601f19168201909252611e5f918101906126dd565b60015b611f15573d808015611e90576040519150601f19603f3d011682016040523d82523d6000602084013e611e95565b606091505b508051600003611f0d5760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527f63656976657220696d706c656d656e7465720000000000000000000000000000606482015260840161071a565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050611712565b506001949350505050565b6001600160e01b0319811681146115c657600080fd5b600060208284031215611f6257600080fd5b813561137d81611f3a565b60005b83811015611f88578181015183820152602001611f70565b50506000910152565b60008151808452611fa9816020860160208601611f6d565b601f01601f19169290920160200192915050565b60208152600061137d6020830184611f91565b600060208284031215611fe257600080fd5b5035919050565b80356001600160a01b038116811461200057600080fd5b919050565b6000806040838503121561201857600080fd5b61202183611fe9565b946020939093013593505050565b6020808252825182820181905260009190848201906040850190845b818110156120675783518352928401929184019160010161204b565b50909695505050505050565b80518252602081015160208301526000604082015160a0604085015261209c60a0850182611f91565b9050606083015184820360608601526120b58282611f91565b9150506080830151151560808501528091505092915050565b60208152600061137d6020830184612073565b6000806000606084860312156120f657600080fd5b6120ff84611fe9565b925061210d60208501611fe9565b9150604084013590509250925092565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff8084111561214e5761214e61211d565b604051601f8501601f19908116603f011681019082821181831017156121765761217661211d565b8160405280935085815286868601111561218f57600080fd5b858560208301376000602087830101525050509392505050565b600082601f8301126121ba57600080fd5b61137d83833560208501612133565b8035801515811461200057600080fd5b600080600080600060a086880312156121f157600080fd5b6121fa86611fe9565b9450602086013567ffffffffffffffff8082111561221757600080fd5b61222389838a016121a9565b9550604088013591508082111561223957600080fd5b50612246888289016121a9565b9350506060860135915061225c608087016121c9565b90509295509295909350565b60006020828403121561227a57600080fd5b813567ffffffffffffffff81111561229157600080fd5b611712848285016121a9565b6000806000606084860312156122b257600080fd5b8335925061210d602085016121c9565b6000602082840312156122d457600080fd5b61137d82611fe9565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561233257603f19888603018452612320858351612073565b94509285019290850190600101612304565b5092979650505050505050565b6000806040838503121561235257600080fd5b61235b83611fe9565b9150612369602084016121c9565b90509250929050565b6000806000806080858703121561238857600080fd5b61239185611fe9565b935061239f60208601611fe9565b925060408501359150606085013567ffffffffffffffff8111156123c257600080fd5b8501601f810187136123d357600080fd5b6123e287823560208401612133565b91505092959194509250565b6000806040838503121561240157600080fd5b82359150602083013567ffffffffffffffff81111561241f57600080fd5b61242b858286016121a9565b9150509250929050565b6000806040838503121561244857600080fd5b61245183611fe9565b915061236960208401611fe9565b6000806040838503121561247257600080fd5b50508035926020909101359150565b600181811c9082168061249557607f821691505b6020821081036124b557634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b808201808211156105e7576105e76124bb565b634e487b7160e01b600052603260045260246000fd5b60006001820161250c5761250c6124bb565b5060010190565b601f8211156107d957600081815260208120601f850160051c8101602086101561253a5750805b601f850160051c820191505b8181101561255957828155600101612546565b505050505050565b815167ffffffffffffffff81111561257b5761257b61211d565b61258f816125898454612481565b84612513565b602080601f8311600181146125c457600084156125ac5750858301515b600019600386901b1c1916600185901b178555612559565b600085815260208120601f198616915b828110156125f3578886015182559484019460019091019084016125d4565b50858210156126115787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60008351612633818460208801611f6d565b835190830190612647818360208801611f6d565b01949350505050565b818103818111156105e7576105e76124bb565b634e487b7160e01b600052601260045260246000fd5b60008261268857612688612663565b500490565b60008261269c5761269c612663565b500690565b60006001600160a01b038087168352808616602084015250836040830152608060608301526126d36080830184611f91565b9695505050505050565b6000602082840312156126ef57600080fd5b815161137d81611f3a56fea164736f6c6343000811000a";

type SpaceShipsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SpaceShipsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SpaceShips__factory extends ContractFactory {
  constructor(...args: SpaceShipsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<SpaceShips> {
    return super.deploy(overrides || {}) as Promise<SpaceShips>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): SpaceShips {
    return super.attach(address) as SpaceShips;
  }
  override connect(signer: Signer): SpaceShips__factory {
    return super.connect(signer) as SpaceShips__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SpaceShipsInterface {
    return new utils.Interface(_abi) as SpaceShipsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SpaceShips {
    return new Contract(address, _abi, signerOrProvider) as SpaceShips;
  }
}
