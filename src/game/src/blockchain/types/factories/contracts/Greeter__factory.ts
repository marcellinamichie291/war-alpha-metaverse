/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type { PromiseOrValue } from "../../common";
import type { Greeter, GreeterInterface } from "../../contracts/Greeter";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAllOnSale",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "uri",
            type: "string",
          },
          {
            internalType: "bool",
            name: "isOnSale",
            type: "bool",
          },
        ],
        internalType: "struct Greeter.TokenMeta[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "string",
        name: "_tokenURI",
        type: "string",
      },
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "_isOnSale",
        type: "bool",
      },
    ],
    name: "mintCollectable",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "purchaseToken",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_newBaseURI",
        type: "string",
      },
    ],
    name: "setBaseURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
    ],
    name: "setTokenPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "_isOnSale",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
    ],
    name: "setTokenSale",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "tokenMeta",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "uri",
            type: "string",
          },
          {
            internalType: "bool",
            name: "isOnSale",
            type: "bool",
          },
        ],
        internalType: "struct Greeter.TokenMeta",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040518060400160405280601481526020017f57617220416c70686120416476656e74757265730000000000000000000000008152506040518060400160405280600481526020016357412d4160e01b8152508160009081620000769190620001a8565b506001620000858282620001a8565b505050620000a26200009c620000ad60201b60201c565b620000b1565b600160075562000274565b3390565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200012e57607f821691505b6020821081036200014f57634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620001a357600081815260208120601f850160051c810160208610156200017e5750805b601f850160051c820191505b818110156200019f578281556001016200018a565b5050505b505050565b81516001600160401b03811115620001c457620001c462000103565b620001dc81620001d5845462000119565b8462000155565b602080601f831160018114620002145760008415620001fb5750858301515b600019600386901b1c1916600185901b1785556200019f565b600085815260208120601f198616915b82811015620002455788860151825594840194600190910190840162000224565b5085821015620002645787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61232f80620002846000396000f3fe60806040526004361061018b5760003560e01c8063715018a6116100d6578063c2db2c421161007f578063e985e9c511610059578063e985e9c514610459578063eb685c47146104a2578063f2fde38b146104c257600080fd5b8063c2db2c4214610406578063c87b56dd14610419578063d4ddce8a1461043957600080fd5b806395d89b41116100b057806395d89b41146103b1578063a22cb465146103c6578063b88d4fde146103e657600080fd5b8063715018a61461035c5780638da5cb5b14610371578063908945591461038f57600080fd5b806339b44436116101385780636352211e116101125780636352211e146102fc5780636387ede61461031c57806370a082311461033c57600080fd5b806339b444361461028e57806342842e0e146102bc57806355f804b3146102dc57600080fd5b8063095ea7b311610169578063095ea7b31461021f5780630ae7a3101461024157806323b872dd1461026e57600080fd5b806301ffc9a71461019057806306fdde03146101c5578063081812fc146101e7575b600080fd5b34801561019c57600080fd5b506101b06101ab366004611c03565b6104e2565b60405190151581526020015b60405180910390f35b3480156101d157600080fd5b506101da610534565b6040516101bc9190611c70565b3480156101f357600080fd5b50610207610202366004611c83565b6105c6565b6040516001600160a01b0390911681526020016101bc565b34801561022b57600080fd5b5061023f61023a366004611cb8565b6105ed565b005b34801561024d57600080fd5b5061026161025c366004611c83565b610725565b6040516101bc9190611d3d565b34801561027a57600080fd5b5061023f610289366004611d50565b6108e7565b34801561029a57600080fd5b506102ae6102a9366004611e48565b61095f565b6040519081526020016101bc565b3480156102c857600080fd5b5061023f6102d7366004611d50565b6109d9565b3480156102e857600080fd5b5061023f6102f7366004611ed7565b6109f4565b34801561030857600080fd5b50610207610317366004611c83565b610a0c565b34801561032857600080fd5b5061023f610337366004611f0c565b610a71565b34801561034857600080fd5b506102ae610357366004611f31565b610b4c565b34801561036857600080fd5b5061023f610be6565b34801561037d57600080fd5b506006546001600160a01b0316610207565b34801561039b57600080fd5b506103a4610bfa565b6040516101bc9190611f4c565b3480156103bd57600080fd5b506101da610e6e565b3480156103d257600080fd5b5061023f6103e1366004611fae565b610e7d565b3480156103f257600080fd5b5061023f610401366004611fe1565b610e88565b61023f610414366004611c83565b610f07565b34801561042557600080fd5b506101da610434366004611c83565b611029565b34801561044557600080fd5b506102ae610454366004611c83565b611090565b34801561046557600080fd5b506101b061047436600461205d565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b3480156104ae57600080fd5b5061023f6104bd366004612087565b611130565b3480156104ce57600080fd5b5061023f6104dd366004611f31565b6111ec565b60006001600160e01b031982166380ac58cd60e01b148061051357506001600160e01b03198216635b5e139f60e01b145b8061052e57506301ffc9a760e01b6001600160e01b03198316145b92915050565b606060008054610543906120a9565b80601f016020809104026020016040519081016040528092919081815260200182805461056f906120a9565b80156105bc5780601f10610591576101008083540402835291602001916105bc565b820191906000526020600020905b81548152906001019060200180831161059f57829003601f168201915b5050505050905090565b60006105d18261127c565b506000908152600460205260409020546001600160a01b031690565b60006105f882610a0c565b9050806001600160a01b0316836001600160a01b03160361066a5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b03821614806106a457506001600160a01b038116600090815260056020908152604080832033845290915290205460ff165b6107165760405162461bcd60e51b815260206004820152603e60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206e6f7220617070726f76656420666f7220616c6c00006064820152608401610661565b61072083836112e0565b505050565b6107596040518060a00160405280600081526020016000815260200160608152602001606081526020016000151581525090565b6000828152600260205260409020546001600160a01b031661077a57600080fd5b600960008381526020019081526020016000206040518060a001604052908160008201548152602001600182015481526020016002820180546107bc906120a9565b80601f01602080910402602001604051908101604052809291908181526020018280546107e8906120a9565b80156108355780601f1061080a57610100808354040283529160200191610835565b820191906000526020600020905b81548152906001019060200180831161081857829003601f168201915b5050505050815260200160038201805461084e906120a9565b80601f016020809104026020016040519081016040528092919081815260200182805461087a906120a9565b80156108c75780601f1061089c576101008083540402835291602001916108c7565b820191906000526020600020905b8154815290600101906020018083116108aa57829003601f168201915b50505091835250506004919091015460ff16151560209091015292915050565b6108f1338261134e565b6109545760405162461bcd60e51b815260206004820152602e60248201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560448201526d1c881b9bdc88185c1c1c9bdd995960921b6064820152608401610661565b6107208383836113cd565b6000610969611581565b6000831161097657600080fd5b610984600880546001019055565b600061098f60085490565b905061099b87826115db565b6040805160a081018252828152602081018690529081018690526060810187905283151560808201526109ce828261171d565b509695505050505050565b61072083838360405180602001604052806000815250610e88565b6109fc611581565b600a610a088282612131565b5050565b6000818152600260205260408120546001600160a01b03168061052e5760405162461bcd60e51b815260206004820152601860248201527f4552433732313a20696e76616c696420746f6b656e20494400000000000000006044820152606401610661565b6000838152600260205260409020546001600160a01b0316610afb5760405162461bcd60e51b815260206004820152602d60248201527f4552433732314d657461646174613a2053616c6520736574206f66206e6f6e6560448201527f78697374656e7420746f6b656e000000000000000000000000000000000000006064820152608401610661565b60008111610b0857600080fd5b33610b1284610a0c565b6001600160a01b031614610b2557600080fd5b6000838152600960205260409020600401805460ff19168315151790556107208382611130565b60006001600160a01b038216610bca5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f74206120766160448201527f6c6964206f776e657200000000000000000000000000000000000000000000006064820152608401610661565b506001600160a01b031660009081526003602052604090205490565b610bee611581565b610bf860006117c5565b565b60606000610c0760085490565b67ffffffffffffffff811115610c1f57610c1f611d8c565b604051908082528060200260200182016040528015610c8457816020015b610c716040518060a00160405280600081526020016000815260200160608152602001606081526020016000151581525090565b815260200190600190039081610c3d5790505b509050600060015b600854610c9a906001612207565b811015610e665760008181526009602052604090206004015460ff161515600103610e5457600960008281526020019081526020016000206040518060a00160405290816000820154815260200160018201548152602001600282018054610d01906120a9565b80601f0160208091040260200160405190810160405280929190818152602001828054610d2d906120a9565b8015610d7a5780601f10610d4f57610100808354040283529160200191610d7a565b820191906000526020600020905b815481529060010190602001808311610d5d57829003601f168201915b50505050508152602001600382018054610d93906120a9565b80601f0160208091040260200160405190810160405280929190818152602001828054610dbf906120a9565b8015610e0c5780601f10610de157610100808354040283529160200191610e0c565b820191906000526020600020905b815481529060010190602001808311610def57829003601f168201915b50505091835250506004919091015460ff1615156020909101528351849084908110610e3a57610e3a61221a565b60200260200101819052508180610e5090612230565b9250505b80610e5e81612230565b915050610c8c565b509092915050565b606060018054610543906120a9565b610a08338383611817565b610e92338361134e565b610ef55760405162461bcd60e51b815260206004820152602e60248201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560448201526d1c881b9bdc88185c1c1c9bdd995960921b6064820152608401610661565b610f01848484846118e5565b50505050565b600260075403610f595760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610661565b60026007553315801590610f875750610f7181610a0c565b6001600160a01b0316336001600160a01b031614155b610f9057600080fd5b600081815260096020526040902060010154341015610fae57600080fd5b6000610fb982610a0c565b6040519091506001600160a01b038216903480156108fc02916000818181858888f19350505050158015610ff1573d6000803e3d6000fd5b50610ffd816001610e7d565b6110088133846113cd565b506000908152600960205260409020600401805460ff191690556001600755565b60606110348261127c565b600061103e61196e565b9050600081511161105e5760405180602001604052806000815250611089565b806110688461197d565b604051602001611079929190612249565b6040516020818303038152906040525b9392505050565b6000818152600260205260408120546001600160a01b031661111a5760405162461bcd60e51b815260206004820152603160248201527f4552433732314d657461646174613a20507269636520717565727920666f722060448201527f6e6f6e6578697374656e7420746f6b656e0000000000000000000000000000006064820152608401610661565b5060009081526009602052604090206001015490565b6000828152600260205260409020546001600160a01b03166111ba5760405162461bcd60e51b815260206004820152602e60248201527f4552433732314d657461646174613a20507269636520736574206f66206e6f6e60448201527f6578697374656e7420746f6b656e0000000000000000000000000000000000006064820152608401610661565b336111c483610a0c565b6001600160a01b0316146111d757600080fd5b60009182526009602052604090912060010155565b6111f4611581565b6001600160a01b0381166112705760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610661565b611279816117c5565b50565b6000818152600260205260409020546001600160a01b03166112795760405162461bcd60e51b815260206004820152601860248201527f4552433732313a20696e76616c696420746f6b656e20494400000000000000006044820152606401610661565b600081815260046020526040902080546001600160a01b0319166001600160a01b038416908117909155819061131582610a0c565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b60008061135a83610a0c565b9050806001600160a01b0316846001600160a01b031614806113a157506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b806113c55750836001600160a01b03166113ba846105c6565b6001600160a01b0316145b949350505050565b826001600160a01b03166113e082610a0c565b6001600160a01b03161461145c5760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201527f6f776e65720000000000000000000000000000000000000000000000000000006064820152608401610661565b6001600160a01b0382166114be5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610661565b6114c96000826112e0565b6001600160a01b03831660009081526003602052604081208054600192906114f2908490612278565b90915550506001600160a01b0382166000908152600360205260408120805460019290611520908490612207565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6006546001600160a01b03163314610bf85760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610661565b6001600160a01b0382166116315760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610661565b6000818152600260205260409020546001600160a01b0316156116965760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610661565b6001600160a01b03821660009081526003602052604081208054600192906116bf908490612207565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6000828152600260205260409020546001600160a01b031661173e57600080fd5b3361174883610a0c565b6001600160a01b03161461175b57600080fd5b600082815260096020908152604091829020835181559083015160018201559082015182919060028201906117909082612131565b50606082015160038201906117a59082612131565b50608091909101516004909101805460ff19169115159190911790555050565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b816001600160a01b0316836001600160a01b0316036118785760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610661565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6118f08484846113cd565b6118fc84848484611a96565b610f015760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527f63656976657220696d706c656d656e74657200000000000000000000000000006064820152608401610661565b6060600a8054610543906120a9565b6060816000036119a45750506040805180820190915260018152600360fc1b602082015290565b8160005b81156119ce57806119b881612230565b91506119c79050600a836122a1565b91506119a8565b60008167ffffffffffffffff8111156119e9576119e9611d8c565b6040519080825280601f01601f191660200182016040528015611a13576020820181803683370190505b5090505b84156113c557611a28600183612278565b9150611a35600a866122b5565b611a40906030612207565b60f81b818381518110611a5557611a5561221a565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350611a8f600a866122a1565b9450611a17565b60006001600160a01b0384163b15611be257604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290611ada9033908990889088906004016122c9565b6020604051808303816000875af1925050508015611b15575060408051601f3d908101601f19168201909252611b1291810190612305565b60015b611bc8573d808015611b43576040519150601f19603f3d011682016040523d82523d6000602084013e611b48565b606091505b508051600003611bc05760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527f63656976657220696d706c656d656e74657200000000000000000000000000006064820152608401610661565b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490506113c5565b506001949350505050565b6001600160e01b03198116811461127957600080fd5b600060208284031215611c1557600080fd5b813561108981611bed565b60005b83811015611c3b578181015183820152602001611c23565b50506000910152565b60008151808452611c5c816020860160208601611c20565b601f01601f19169290920160200192915050565b6020815260006110896020830184611c44565b600060208284031215611c9557600080fd5b5035919050565b80356001600160a01b0381168114611cb357600080fd5b919050565b60008060408385031215611ccb57600080fd5b611cd483611c9c565b946020939093013593505050565b80518252602081015160208301526000604082015160a06040850152611d0b60a0850182611c44565b905060608301518482036060860152611d248282611c44565b9150506080830151151560808501528091505092915050565b6020815260006110896020830184611ce2565b600080600060608486031215611d6557600080fd5b611d6e84611c9c565b9250611d7c60208501611c9c565b9150604084013590509250925092565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff80841115611dbd57611dbd611d8c565b604051601f8501601f19908116603f01168101908282118183101715611de557611de5611d8c565b81604052809350858152868686011115611dfe57600080fd5b858560208301376000602087830101525050509392505050565b600082601f830112611e2957600080fd5b61108983833560208501611da2565b80358015158114611cb357600080fd5b600080600080600060a08688031215611e6057600080fd5b611e6986611c9c565b9450602086013567ffffffffffffffff80821115611e8657600080fd5b611e9289838a01611e18565b95506040880135915080821115611ea857600080fd5b50611eb588828901611e18565b93505060608601359150611ecb60808701611e38565b90509295509295909350565b600060208284031215611ee957600080fd5b813567ffffffffffffffff811115611f0057600080fd5b6113c584828501611e18565b600080600060608486031215611f2157600080fd5b83359250611d7c60208501611e38565b600060208284031215611f4357600080fd5b61108982611c9c565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015611fa157603f19888603018452611f8f858351611ce2565b94509285019290850190600101611f73565b5092979650505050505050565b60008060408385031215611fc157600080fd5b611fca83611c9c565b9150611fd860208401611e38565b90509250929050565b60008060008060808587031215611ff757600080fd5b61200085611c9c565b935061200e60208601611c9c565b925060408501359150606085013567ffffffffffffffff81111561203157600080fd5b8501601f8101871361204257600080fd5b61205187823560208401611da2565b91505092959194509250565b6000806040838503121561207057600080fd5b61207983611c9c565b9150611fd860208401611c9c565b6000806040838503121561209a57600080fd5b50508035926020909101359150565b600181811c908216806120bd57607f821691505b6020821081036120dd57634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561072057600081815260208120601f850160051c8101602086101561210a5750805b601f850160051c820191505b8181101561212957828155600101612116565b505050505050565b815167ffffffffffffffff81111561214b5761214b611d8c565b61215f8161215984546120a9565b846120e3565b602080601f831160018114612194576000841561217c5750858301515b600019600386901b1c1916600185901b178555612129565b600085815260208120601f198616915b828110156121c3578886015182559484019460019091019084016121a4565b50858210156121e15787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052601160045260246000fd5b8082018082111561052e5761052e6121f1565b634e487b7160e01b600052603260045260246000fd5b600060018201612242576122426121f1565b5060010190565b6000835161225b818460208801611c20565b83519083019061226f818360208801611c20565b01949350505050565b8181038181111561052e5761052e6121f1565b634e487b7160e01b600052601260045260246000fd5b6000826122b0576122b061228b565b500490565b6000826122c4576122c461228b565b500690565b60006001600160a01b038087168352808616602084015250836040830152608060608301526122fb6080830184611c44565b9695505050505050565b60006020828403121561231757600080fd5b815161108981611bed56fea164736f6c6343000811000a";

type GreeterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GreeterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Greeter__factory extends ContractFactory {
  constructor(...args: GreeterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Greeter> {
    return super.deploy(overrides || {}) as Promise<Greeter>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Greeter {
    return super.attach(address) as Greeter;
  }
  override connect(signer: Signer): Greeter__factory {
    return super.connect(signer) as Greeter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GreeterInterface {
    return new utils.Interface(_abi) as GreeterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Greeter {
    return new Contract(address, _abi, signerOrProvider) as Greeter;
  }
}
